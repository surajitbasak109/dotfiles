#--------------------------------------------------------------------------
# Configuration
#--------------------------------------------------------------------------

# Use Vi mode
setw -g mode-keys vi

# Increase scrollback buffer size
set -g history-limit 10000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Improve colors
set -g default-terminal "${TERM}"

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Allow the mouse to resize windows and select tabs
set -g mouse on

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

#--------------------------------------------------------------------------
# Status line
#--------------------------------------------------------------------------

# Status line customisation
set-option -g status-left-length 100
set-option -g status-right-length 100

set-option -g status-left " #{session_name}  "
# set-option -g status-left " " # Screencast mode

set-option -g status-right "#{pane_title} "
# set-option -g status-right "#[fg=#1D9BF0]#[fg=#c0caf5] @jessarchercodes   #[fg=#ffffff] #[fg=#c0caf5]jessarcher   #[fg=#06B6D4]爵#[fg=#94A3B8]jessarcher.com "
# set-option -g status-right "#[fg=#1D9BF0]#[fg=#c0caf5] jessarchercodes   #[fg=#ffffff] #[fg=#c0caf5]jessarcher "

set-option -g status-style "fg=#545c7e bg=#1f2335"
#set-option -g status-style "fg=#545c7e bg=default" # Screencast mode

set-option -g window-status-format "#[fg=#545c7e]#{window_index}/#{pane_current_command} "
set-option -g window-status-current-format "#[fg=#545c7e]#{window_index}/#[fg=#E9E9EA]#{pane_current_command} "
# set-option -g window-status-format "· " # Screencast mode
# set-option -g window-status-current-format "· " # Screencast mode

set-option -g window-status-current-style "fg=#E9E9EA"
set-option -g window-status-activity-style none

set-option -g pane-active-border-style "fg=#1f2335"
set-option -g pane-border-style "fg=#1f2335"

# set-option -g default-terminal "screen-256color"
#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Set the prefix to Ctrl+Space
set -g prefix C-Space

# Send prefix to a nested tmux session by doubling the prefix
bind C-Space send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r M-h select-window -t :-
bind -r M-l select-window -t :+
bind -n M-c new-window

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

bind-key > swap-window -t +1 \; next
bind-key < swap-window -t -1 \; prev

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind ^ switch-client -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    'bind-key -T copy-mode-vi v send-keys -X begin-selection;'

bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

bind-key -r F new-window t
bind-key -r D run-shell "t ~/dotfiles2"

bind-key -n M-1 selectw -t 1
bind-key -n M-2 selectw -t 2
bind-key -n M-3 selectw -t 3
bind-key -n M-4 selectw -t 4
bind-key -n M-5 selectw -t 5
bind-key -n M-6 selectw -t 6
bind-key -n M-7 selectw -t 7
bind-key -n M-8 selectw -t 8
bind-key -n M-9 selectw -t 9

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
